# stateless application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: springbootapp
  namespace: test-ns
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springbootapp
  template:
    metadata:
      labels:
        app: springbootapp
    spec:
      containers:
      - name: springappcontainer
        image: tushar660/spring-boot-mongo:1
        resources:
          requests:
            cpu: 200m
            memory: 266Mi
          limits:
            memory: "500Mi"
            cpu: "500m"
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongosvc
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
---
#  Kubernetes Service of type NodePort
apiVersion: v1
kind: Service
metadata:
  name: apringappsvc
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springbootapp
  ports:
  - port: 80
    targetPort: 8080
---
# Stateful and ReplicaSet ensures MongoDB Pods are always running with the specified configuration
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      name: myapp
      labels:
        app: mongo
    spec:
      containers:
      - name: mongodbcontainers
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          values: devdb
        - name: MONGO_INITDB_ROOT
          values: devdb@123
        volumeMounts:
        - name: mongodbhostvol
          mountPath: /data/db
      volumes:
      - name: mogodbvol
        PersistentVolumeClaim:
          claimName: mongopvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongopvc
  namespace: test-ns
spec:
  resources:
    requests:
      storage: 1Gi
  accessModes:
    - ReadWriteOnce
---
# Kubernetes Service of type ClusterIP to expose a MongoDB application internally within the cluster
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
  namespace: test-ns
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

